<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leateck.gmp.backup.mapper.BackupConfigDataMapper">

    <resultMap id="backupDataResultMap" type="com.leateck.gmp.backup.entity.BackupConfigData">
        <id column="id" jdbcType="CHAR" property="id" />
        <result column="backup_config_id" jdbcType="CHAR" property="backupConfigId" />
        <result column="shell_commands" jdbcType="VARCHAR" property="shellCommands" />
        <result column="backup_paths" jdbcType="VARCHAR" property="backupPaths" />
        <result column="cron_expr" jdbcType="VARCHAR" property="cronExpr" />
        <result column="filename" jdbcType="VARCHAR" property="filename" />
    </resultMap>

    <!--<select id="queryAll" resultMap="backupDataResultMap">
        select * from backup_config_data
    </select>-->

    <select id="queryById" parameterType="string" resultMap="backupDataResultMap">
        select * from backup_config_data where id = #{id}
    </select>

    <select id="queryByBackupConfigId" parameterType="string" resultMap="backupDataResultMap">
        select * from backup_config_data where backup_config_id = #{backupConfigId}
    </select>

    <insert id="insertData" parameterType="com.leateck.gmp.backup.entity.BackupConfigData">
        insert into backup_config_data(id, backup_config_id, shell_commands, backup_paths, cron_expr, filename)
            values(
                #{backupConfigData.id},
                #{backupConfigData.backupConfigId},
                #{backupConfigData.shellCommands},
                #{backupConfigData.backupPaths},
                #{backupConfigData.cronExpr},
                #{backupConfigData.filename}
            )
    </insert>

    <update id="modifyDataById" parameterType="com.leateck.gmp.backup.entity.BackupConfigData">
        update backup_config_data
        <trim prefix="set" suffixOverrides=",">
            <if test="backupConfigData.backupConfigId!=null">backup_config_id = #{backupConfigData.backupConfigId},</if>
            <if test="backupConfigData.shellCommands!=null">shell_commands = #{backupConfigData.shellCommands},</if>
            <if test="backupConfigData.backupPaths!=null">backup_paths = #{backupConfigData.backupPaths},</if>
            <if test="backupConfigData.cronExpr!=null">cron_expr = #{backupConfigData.cronExpr},</if>
            <if test="backupConfigData.filename!=null">filename = #{backupConfigData.filename},</if>
        </trim>
        where id = #{backupConfigData.id}
    </update>

    <delete id="deleteById" parameterType="string">
        delete from backup_config_data where id = #{id}
    </delete>

    <delete id="deleteByBackupConfigId" parameterType="string">
        delete from backup_config_data where backup_config_id = #{backupConfigId}
    </delete>

</mapper>
