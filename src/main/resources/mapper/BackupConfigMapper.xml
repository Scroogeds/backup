<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leateck.gmp.backup.mapper.BackupConfigMapper">

    <resultMap id="backupResultMap" type="com.leateck.gmp.backup.entity.BackupConfig">
        <id column="id" jdbcType="CHAR" property="id" />
        <result column="sys_type" jdbcType="CHAR" property="sysType" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="connect_type" jdbcType="CHAR" property="connectType" />
        <!--<result column="shell_commands" jdbcType="VARCHAR" property="shellCommands" />
        <result column="backup_paths" jdbcType="VARCHAR" property="backupPaths" />-->
    </resultMap>

    <select id="queryAll" resultMap="backupResultMap">
        select * from backup_config
    </select>

    <select id="queryById" parameterType="string" resultMap="backupResultMap">
        select * from backup_config where id = #{id}
    </select>

    <insert id="insertBackupConfig" parameterType="com.leateck.gmp.backup.entity.BackupConfig">
        insert into backup_config(id, sys_type, address, username, password, connect_type)
            values(
                #{backConfig.id},
                #{backConfig.sysType},
                #{backConfig.address},
                #{backConfig.username},
                #{backConfig.password},
                #{backConfig.connectType}
            )
    </insert>

    <update id="modifyBackupConfigById" parameterType="com.leateck.gmp.backup.entity.BackupConfig">
        update backup_config
        <trim prefix="set" suffixOverrides=",">
            <if test="backConfig.sysType!=null">sys_type = #{backConfig.sysType},</if>
            <if test="backConfig.address!=null">address = #{backConfig.address},</if>
            <if test="backConfig.username!=null">username = #{backConfig.username},</if>
            <if test="backConfig.password!=null">password = #{backConfig.password},</if>
            <if test="backConfig.connectType!=null">connect_type = #{backConfig.connectType},</if>
        </trim>
        where id = #{backConfig.id}
    </update>

    <delete id="deleteById" parameterType="string">
        delete from backup_config where id = #{id}
    </delete>

</mapper>
